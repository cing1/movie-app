{"version":3,"sources":["Components/Menu/OptionsMenu.js","Components/SearchResults.js","Components/Loading.js","Components/SearchBox.js","Context/MyListContext.js","Components/Menu/Menu.js","Components/SeriePoster.js","Pages/Series.js","Components/MoviePoster.js","Pages/Movies.js","Components/AlertCustom.js","Pages/MovieDetails.js","Pages/SerieDetails.js","Components/Carousel.js","Components/PopularMoviesPoster.js","Components/PopularMovies.js","Components/PopularSeriesPoster.js","Components/PopularSeries.js","Pages/Home.js","Pages/MyList.js","Components/RoutesWeb.js","App.js","reportWebVitals.js","index.js"],"names":["OptionMenu","option","Nav","Link","as","to","path","label","image","SearchResults","movie","media_type","id","className","poster_path","src","alt","title","Loading","Spinner","animation","role","variant","SearchBox","useState","query","setQuery","movies","setMovies","spinner","setSpinner","error","setError","showOverlay","setShowOverlay","handleSubmit","event","preventDefault","fetch","then","res","json","data","console","log","results","length","handleClose","Form","inline","onSubmit","Group","controlId","Control","type","placeholder","value","onChange","target","Button","onClick","map","MyListContext","React","createContext","myListFromLocalStorage","JSON","parse","localStorage","getItem","MyListProvider","props","myListFavorites","setMyListFavorites","useEffect","setItem","stringify","Provider","children","Menu","useContext","Navbar","collapseOnSelect","expand","Brand","Toggle","Collapse","options","Badge","SeriePoster","Series","genreOptions","setGenreOptions","orden","genero","selectOptions","setSelectOptions","setResults","genres","catch","handleChange","e","name","genreOption","result","MoviePoster","Movies","AlertCustom","Alert","text","DetallePelicula","pelicula","setPelicula","alert","setAlert","match","params","favorite","Card","Img","backdrop_path","ImgOverlay","Title","Text","original_title","vote_average","overview","repeated","filter","saveFavs","DetalleSerie","serie","setSerie","original_name","TrendingCarousel","Carousel","indicators","Item","Caption","PopularMoviesPoster","PopularMovies","Container","fluid","dots","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","settings","initialSlide","PopularSeriesPoster","PopularSeries","Home","MyList","RoutesWeb","exact","component","MovieDetails","SerieDetails","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.418b4590.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n\r\nfunction OptionMenu({option}){\r\n\r\n\treturn(\r\n\t\t<Nav.Link as={Link} to={option.path}>{option.label}</Nav.Link>\r\n\t)\r\n}\r\n\r\nexport default OptionMenu;","import React from \"react\";\r\nimport {BiConfused } from \"react-icons/bi\";\r\nimport {Link} from 'react-router-dom';\r\nimport \"../Styles/SearchResults.css\";\r\n\r\nconst image = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nfunction SearchResults(movie) {\r\n\r\n  return (\r\n    <div>\r\n      {movie.media_type == \"movie\" ? \r\n\r\n        (<Link to={\"/peliculas/\"+movie.id}>\r\n          <div className=\"search-result-container\">\r\n            {movie.poster_path ? \r\n            (<img\r\n            className=\"search-result-image\"\r\n            src={image + movie.poster_path}\r\n            alt={`${movie.title} Poster`}/>\r\n            ) \r\n            :\r\n            (<div className=\"no-image-container\">\r\n            <BiConfused className=\"BiConfused\"/>\r\n            <p className=\"no-image-text\">Imagen no disponible</p>\r\n            </div>\r\n            )}\r\n          </div>\r\n        </Link>)\r\n\r\n       : \r\n\r\n       (<Link to={\"/series/\"+movie.id}>\r\n          <div className=\"search-result-container\">\r\n            {movie.poster_path ? \r\n            (<img\r\n              className=\"search-result-image\"\r\n              src={image + movie.poster_path}\r\n              alt={`${movie.title} Poster`}/>\r\n            ) \r\n            : \r\n            (<div className=\"no-image-container\">\r\n            <BiConfused className=\"BiConfused\"/>\r\n            <p className=\"no-image-text\">Imagen no disponible</p>\r\n            </div>\r\n            )}\r\n          </div>\r\n        </Link>)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchResults;","import {Spinner} from 'react-bootstrap';\r\nimport \"../Styles/Loading.css\";\r\n\r\nfunction Loading(){\r\n\treturn(\r\n\t\t<div className=\"spinner-container\">\r\n\t\t    <Spinner className=\"spinner\" animation=\"border\" role=\"status\" variant=\"warning\"></Spinner>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Loading;","\r\nimport React, {useState} from 'react';\r\nimport {Form, Button} from 'react-bootstrap';\r\nimport SearchResults from \"../Components/SearchResults\";\r\nimport Loading from \"../Components/Loading\";\r\nimport {BsSearch, BsFillXSquareFill} from \"react-icons/bs\";\r\nimport \"../Styles/SearchBox.css\";\r\n\r\nfunction SearchBox(){\r\n\r\n  const [query, setQuery] = useState(\"\");\r\n  const [movies, setMovies] = useState([]);\r\n  const [spinner, setSpinner] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [showOverlay, setShowOverlay] = useState(false);\r\n\r\n  const handleOnChange = (event) => {\r\n      setQuery(event.target.value);\r\n      if (event.target.value == \"\") {\r\n        setMovies([]);\r\n        setError(false);\r\n      }\r\n  };\r\n\r\n  const handleSubmit = async (event)=>{\r\n      event.preventDefault();\r\n      setSpinner(true);\r\n\r\n      fetch(`https://api.themoviedb.org/3/search/multi?api_key=c2c2cd525b5005c063f7b1a9d54ab699&language=es-ES&query=${query}&page=1&include_adult=false`)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n          setMovies(data.results);\r\n          setError(false);\r\n          setShowOverlay(true);\r\n        if(data.results.length == 0){\r\n              setError(true);\r\n              setShowOverlay(false);\r\n              console.log(\"no results\");\r\n        }\r\n          setSpinner(false);\r\n        });\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    setQuery(\"\");\r\n    setMovies([]);\r\n    setShowOverlay(false);\r\n  };\r\n\r\n  return(\r\n    <>\r\n      <div className=\"searchbox-container\">\r\n        <Form  inline onSubmit={handleSubmit}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Control \r\n              type=\"text\" \r\n              placeholder=\"Buscar peliculas y series\"  \r\n              value={query} \r\n              onChange={handleOnChange}/>\r\n          </Form.Group>\r\n          <Button type=\"submit\" variant=\"dark\" className=\"search-button\"><BsSearch/></Button>\r\n        </Form>\r\n      </div>\r\n\r\n        {error && \r\n          <div className=\"error-overlay\">\r\n            <h3 className=\"no-results\">No hay resultados</h3>\r\n          </div>\r\n        }\r\n\r\n        {spinner && \r\n          <div className=\"search-overlay\">\r\n            <Loading/>   \r\n        </div>    \r\n        }       \r\n\r\n        {showOverlay && \r\n          <div className=\"search-overlay\">\r\n            <Button variant=\"dark\" className=\"close-button\" onClick={handleClose}><BsFillXSquareFill className=\"BsFillXSquareFill\"/></Button>\r\n            <div onClick={handleClose} className=\"search-results-container\">\r\n              {movies.map(movie=><SearchResults key={movie.id} {...movie} />)}\r\n            </div>\r\n          </div>}\r\n    </>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React, {useState, useEffect, useContext} from \"react\";\r\n\r\n\texport const MyListContext = React.createContext();\r\n\r\n\tconst myListFromLocalStorage = JSON.parse(localStorage.getItem(\"myListFavorites\") || \"[]\")\r\n\r\nexport const MyListProvider = (props) => {\r\n\r\n\tconst [myListFavorites, setMyListFavorites] = useState(myListFromLocalStorage);\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(\"myListFavorites\", JSON.stringify(myListFavorites));\r\n\t}, [myListFavorites]);\r\n\r\n\treturn (\r\n\t\t<MyListContext.Provider value={[myListFavorites, setMyListFavorites]}>\r\n\t\t\t{props.children}\r\n\t\t</MyListContext.Provider>\r\n\t)\r\n}","import React, {useContext} from \"react\";\r\nimport OpcionesMenu from \"./OptionsMenu\";\r\nimport {Navbar, Nav, Button, Badge} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { BsList } from \"react-icons/bs\";\r\nimport SearchBox from \"../SearchBox\";\r\nimport {MyListContext} from \"../../Context/MyListContext\";\r\nimport \"../../Styles/Menu.css\";\r\n\r\nfunction Menu(props){\r\n\r\n\tconst [myListFavorites, setMyListFavorites] = useContext(MyListContext);\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<Navbar collapseOnSelect expand=\"lg\" variant=\"dark\">\r\n\t    \t\t<Navbar.Brand>Movie App</Navbar.Brand>\r\n\t    \t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n  \t\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\t\t    \t\t<Nav className=\"mr-auto\">\r\n\t\t\t\t\t\t{props.options.map(option=><OpcionesMenu option={option} />)}\r\n\t\t    \t\t</Nav>\r\n\t\t    \t\t<Nav>\r\n\t\t  \t\t\t\t<SearchBox />\r\n\t      \t\t\t\t<Button variant=\"warning\" as={Link} to={\"/lista\"}>\r\n\t      \t\t\t\t\t<BsList/>Mi Lista<Badge variant=\"light\">{myListFavorites.length}</Badge>\r\n\t      \t\t\t\t</Button>\r\n\t      \t\t\t</Nav>\r\n     \t\t\t </Navbar.Collapse>\r\n  \t\t\t</Navbar>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Menu;\r\n\r\n","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport {BiConfused} from \"react-icons/bi\";\r\nimport \"../Styles/SeriePoster.css\";\r\n\r\nconst image = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nfunction SeriePoster(results){\r\n\treturn (\r\n\t\t<div className=\"serieposter-container\">\r\n\t\t\t<Link to={\"/series/\"+results.id}>\r\n\t\t \t\t{results.poster_path ? \r\n\t\t \t\t(<img src={image + results.poster_path}/>) \r\n\t\t \t\t:\r\n\t\t\t \t(<div className=\"BiConfused-container\">\r\n\t         \t<BiConfused className=\"BiConfused\"/ >\r\n\t          \t<p className=\"no-image\">Imagen no disponible</p>\r\n\t          \t</div>\r\n\t        \t)}\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SeriePoster;","import React , {useState, useEffect} from \"react\";\r\nimport {Form} from \"react-bootstrap\";\r\nimport Loading from \"../Components/Loading\";\r\nimport SeriePoster from \"../Components/SeriePoster\";\r\nimport \"../Styles/Series.css\";\r\n\r\nfunction Series(){\r\n\r\n\tconst [genreOptions, setGenreOptions] = useState([]);\r\n\tconst [selectOptions, setSelectOptions] = useState({orden: 'popularity.desc', genero: ''});\r\n\tconst [results, setResults] = useState([]);\r\n\tconst [spinner, setSpinner] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSpinner(false);\r\n\t\tfetch('https://api.themoviedb.org/3/genre/tv/list?api_key=c2c2cd525b5005c063f7b1a9d54ab699&language=es-ES')\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((data) => {\r\n\t\t  \t\tsetGenreOptions(data.genres);\r\n\t\t  \t})\r\n\t\t  \t.catch((error)=>{\r\n            \tconsole.log(error)\r\n       \t \t})\r\n\t}, []);\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetSelectOptions({\r\n\t\t\t...selectOptions,\r\n\t\t\t[e.target.name] : e.target.value\r\n\t\t})\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSpinner(true);\r\n\t\tfetch(`https://api.themoviedb.org/3/discover/tv?api_key=c2c2cd525b5005c063f7b1a9d54ab699&language=es-ES&sort_by=${selectOptions.orden}&include_adult=false&page=1&with_genres=${selectOptions.genero}`)\r\n\t    \t.then((res) => res.json())\r\n\t      \t.then((data) => {\r\n\t      \t\tconsole.log(data);\r\n\t\t\t\tsetResults(data.results);\r\n\t      \t\tsetSpinner(false);\r\n\t      \t})\r\n\t      \t.catch((error)=>{\r\n            \tconsole.log(error)\r\n        })\r\n\r\n\t}, [selectOptions]);\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t{spinner &&\r\n\t\t\t\t<Loading />\r\n      \t\t}\r\n\r\n\t\t\t<h3>Series</h3>\r\n\r\n\t\t\t<div className=\"select-container\">\r\n\t\t\t\t<h6>Seleccionar género:</h6>\r\n\t\t\t\t<Form.Control className=\"select\" as=\"select\" onChange={handleChange} name=\"genero\">\r\n\t\t\t\t\t<option value=\"\">Todas los géneros</option>\r\n\t\t\t\t\t\t{genreOptions.map((genreOption)=><option value={genreOption.id}>{genreOption.name}</option>)}\r\n\t\t\t\t</Form.Control>\r\n\t\t\t\t<h6>Ordenar por:</h6>\r\n\t\t\t\t<Form.Control className=\"select\" as=\"select\"onChange={handleChange} name=\"orden\">\r\n\t\t\t\t\t<option value=\"popularity.desc\" >Más populares</option>\t\t\t\r\n\t\t\t\t\t<option value=\"vote_average.desc\" >Más votadas</option>\r\n\t\t\t\t\t<option value=\"first_air_date.desc\" >Más recientes</option>\r\n\t\t\t\t</Form.Control>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"results-container\">\t\r\n\t\t\t\t{results.length > 0 && results.map((result)=><SeriePoster key={result.id} {...result} results={results} />)}\t\t\r\n\t\t\t</div>\t\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Series;","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport {BiConfused} from \"react-icons/bi\";\r\nimport \"../Styles/MoviePoster.css\";\r\n\r\nconst image = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nfunction MoviePoster(result) {\r\n\r\n\treturn (\r\n\t\t<div className=\"poster-container\">\r\n\t\t\t<Link to={\"/peliculas/\"+result.id}>\r\n\t\t\t  \t{result.poster_path ? \r\n\t\t\t  \t(<img src={image + result.poster_path}/>) \r\n\t\t\t  \t:\r\n\t\t\t\t(<div className=\"BiConfused-container\">\r\n\t         \t<BiConfused className=\"BiConfused\"/>\r\n\t            <p className=\"no-image\">Imagen no disponible</p>\r\n\t            </div>\r\n\t        \t)}\r\n\t\t\t </Link>\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\n\r\nexport default MoviePoster;","import React , {useState, useEffect} from \"react\";\r\nimport MoviePoster from \"../Components/MoviePoster\";\r\nimport Loading from \"../Components/Loading\";\r\nimport {Form} from 'react-bootstrap';\r\nimport \"../Styles/Movies.css\";\r\n\r\nfunction Movies(){\r\n\r\n\tconst [genreOptions, setGenreOptions] = useState([]);\r\n\tconst [selectOptions, setSelectOptions] = useState({orden: 'popularity.desc', genero: ''});\r\n\tconst [results, setResults] = useState([]);\r\n\tconst [spinner, setSpinner] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSpinner(true);\r\n\t\tfetch('https://api.themoviedb.org/3/genre/movie/list?api_key=c2c2cd525b5005c063f7b1a9d54ab699&language=es-ES')\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((data) => {\r\n\t\t  \t\tsetGenreOptions(data.genres);\r\n\t\t  \t\tsetSpinner(false);\r\n\t\t  \t})\r\n\t\t  \t.catch((error)=>{\r\n            \tconsole.log(error)\r\n        \t})\r\n\t}, []);\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetSelectOptions({\r\n\t\t\t...selectOptions,\r\n\t\t\t[e.target.name] : e.target.value\r\n\t\t})\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSpinner(true);\r\n\t    fetch(`https://api.themoviedb.org/3/discover/movie?api_key=c2c2cd525b5005c063f7b1a9d54ab699&language=es-ES&sort_by=${selectOptions.orden}&include_adult=false&page=1&with_genres=${selectOptions.genero}`)\r\n\t    \t.then((res) => res.json())\r\n\t    \t.then((data) => {\r\n\t\t      \tconsole.log(data);\r\n\t\t      \tsetResults(data.results);\r\n\t\t      \tsetSpinner(false);\r\n\t    \t})\r\n\t    \t.catch((error)=>{\r\n            \tconsole.log(error)\r\n        \t})\r\n\t}, [selectOptions]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{spinner &&\r\n\t\t    \t<Loading />\r\n      \t\t}\r\n\t\t\t\t<h3>Películas</h3>\r\n\r\n\t\t\t\t\t<div className=\"select-container\">\r\n\t\t\t\t\t\t<h6>Seleccionar género:</h6>\r\n\t\t\t\t\t\t<Form.Control className=\"select\" as=\"select\" onChange={handleChange} name=\"genero\">\r\n\t\t\t\t\t\t\t<option value=\"\">Todas los géneros</option>\r\n\t\t\t\t\t\t\t\t{genreOptions.map((genreOption)=><option value={genreOption.id}>{genreOption.name}</option>)}\t\t\r\n\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t<h6>Ordenar por:</h6>\r\n\t\t\t\t\t\t<Form.Control className=\"select\" as=\"select\" onChange={handleChange} name=\"orden\">\r\n\t\t\t\t\t\t\t<option value=\"popularity.desc\" >Más populares</option>\t\t\t\r\n\t\t\t\t\t\t\t<option value=\"primary_release_date.desc\" >Lanzamientos más recientes</option>\r\n\t\t\t\t\t\t\t<option value=\"original_title.asc\" >A - Z</option>\r\n\t\t\t\t\t\t\t<option value=\"original_title.desc\" >Z - A</option>\r\n\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t</div>\t\r\n\r\n\t\t\t\t\t<div className=\"results-container\">\t\r\n\t\t\t\t\t\t{results.length > 0 && results.map((result)=><MoviePoster key={result.id} {...result} result={result} />)}\t\t\r\n\t\t\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Movies;","import React from \"react\";\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport \"../Styles/AlertCustom.css\";\r\n\r\nfunction AlertCustom(props){\r\n    return(\r\n        <Alert className=\"alert\" variant={props.variant}>\r\n            {props.text}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default AlertCustom","import React, {useState, useEffect, useContext} from \"react\";\r\nimport {Card, Button, Badge} from 'react-bootstrap';\r\nimport { BsHeartFill, BsFillStarFill, BsFillXCircleFill } from \"react-icons/bs\";\r\nimport {MyListContext} from \"../Context/MyListContext\";\r\nimport Loading from \"../Components/Loading\";\r\nimport \"../Styles/MovieDetails.css\";\r\nimport AlertCustom from \"../Components/AlertCustom\";\r\n\r\nconst image = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nfunction DetallePelicula(props){\r\n\r\n\tconst [pelicula, setPelicula] = useState([]);\r\n\tconst [myListFavorites, setMyListFavorites] = useContext(MyListContext);\r\n\tconst [spinner, setSpinner] = useState(true);\r\n\tconst [alert,setAlert] = useState({variant:\"\",text:\"\"})\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSpinner(true)\r\n\t\tfetch(`https://api.themoviedb.org/3/movie/${(props.match.params.id)}?api_key=c2c2cd525b5005c063f7b1a9d54ab699&language=es`)\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((data) => {\r\n\t\t  \t\t\tconsole.log(data);\r\n\t\t  \t\t\tsetPelicula(data);\r\n\t\t  \t\t\tsetSpinner(false);\r\n\t\t  \t\t\t})\r\n\t\t\t.catch((error)=>{\r\n\t            console.log(error)\r\n\t        })\r\n\t}, []);\r\n\r\n\r\n\tconst favorite= {\r\n\t      id: pelicula.id,\r\n\t}\r\n\r\n\tconst saveFavs = (pelicula) => {\r\n\t    let repeated = myListFavorites.filter(function(pelicula){ return pelicula.id === favorite.id}).length;\r\n\t    if (!repeated){\r\n\t        setMyListFavorites([...myListFavorites, pelicula]);\r\n\t        setAlert({variant:\"success\",text:\"Agregado a Mi Lista\"});\r\n\t    } else{\r\n\t    \tsetAlert({variant:\"danger\",text:\"Ya ha sido agregado a Mi Lista\"});\r\n\t    };\r\n\t}\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t{spinner && <Loading />}\r\n\r\n\t\t\t<Card className=\"bg-dark text-white\">\r\n  \t\t\t\t<Card.Img className=\"background-image\" src={image + pelicula.backdrop_path} alt={pelicula.title}/>\r\n  \t\t\t\t\t<Card.ImgOverlay className=\"ImgOverlay\">\r\n\t\t\t\t \t\t<div className=\"column-1\">\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t    className=\"movie-poster-path\"\r\n\t\t\t\t\t\t\t    src={image + pelicula.poster_path}\r\n\t\t\t\t\t\t\t    alt={pelicula.title}/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t \t\t\t<div className=\"column-2\">\r\n\t\t\t    \t\t\t<Card.Title><h1>{pelicula.title}</h1></Card.Title>\r\n\t\t\t    \t\t\t<Card.Text>\r\n\t\t\t      \t\t\t\t<h5 className=\"movie-original-title\">({pelicula.original_title}) - <Badge variant=\"warning\" ><BsFillStarFill/>{pelicula.vote_average}</Badge></h5>\r\n\t\t\t    \t\t\t</Card.Text>\r\n\t\t\t    \t\t\t<Card.Text>{pelicula.overview}</Card.Text>\r\n\t\t\t\t\t\t\t<Button variant=\"danger\" onClick={()=>saveFavs(pelicula)}><BsHeartFill/> Agregar a Mi Lista</Button>\r\n\t\t\t    \t\t\t<AlertCustom variant={alert.variant} text={alert.text} />\r\n\t\t\t\t\t    </div>\r\n\t\t\t\t\t</Card.ImgOverlay>\r\n\t\t\t</Card>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default DetallePelicula;","import React, {useState, useEffect, useContext} from \"react\";\r\nimport {Card, Button, Badge} from 'react-bootstrap';\r\nimport {BsHeartFill, BsFillStarFill, BsFillXCircleFill} from \"react-icons/bs\";\r\nimport {MyListContext} from \"../Context/MyListContext\";\r\nimport Loading from \"../Components/Loading\";\r\nimport AlertCustom from \"../Components/AlertCustom\";\r\n\r\nconst image = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nfunction DetalleSerie(props){\r\n\r\n\tconst [serie, setSerie] = useState({});\r\n\tconst [myListFavorites, setMyListFavorites] = useContext(MyListContext);\r\n\tconst [spinner, setSpinner] = useState(true);\r\n\tconst [alert,setAlert] = useState({variant:\"\",text:\"\"})\r\n\r\nuseEffect(() =>{\r\n\tsetSpinner(true);\r\n\tfetch(`https://api.themoviedb.org/3/tv/${(props.match.params.id)}?api_key=c2c2cd525b5005c063f7b1a9d54ab699&language=es-ES`)\r\n\t.then((res) => res.json())\r\n\t.then((data) => {\r\n\t  \tconsole.log(data);\r\n\t  \tsetSerie(data);\r\n\t  \tsetSpinner(false);\r\n\t  \t\t\t})\r\n\t.catch((error)=>{\r\n        console.log(error)\r\n    })\r\n}, []);\r\n\r\n\r\nconst favorite= {\r\n      id: serie.id,\r\n}\r\n\r\nconst saveFavs = (serie) => {\r\n    let repeated = myListFavorites.filter(function(serie){ return serie.id === favorite.id}).length;\r\n    if (!repeated){\r\n        setMyListFavorites([...myListFavorites, serie]);\r\n        setAlert({variant:\"success\",text:\"Agregado a Mi Lista\"});\r\n    } else{\r\n    \tsetAlert({variant:\"danger\",text:\"Ya ha sido agregado a Mi Lista\"});\r\n    }\r\n  }\r\n\r\nreturn (\r\n\t<>\r\n\t\t{spinner &&<Loading />}\r\n\r\n\t\t<Card className=\"bg-dark text-white\" >\r\n  \t\t\t<Card.Img className=\"background-image\" src={image + serie.backdrop_path} alt=\"Card image\"/>\r\n \t\t \t\t<Card.ImgOverlay className=\"ImgOverlay\">\r\n \t\t\t\t\t<div className=\"column-1\">\r\n\t\t\t\t\t\t<img\r\n\t\t\t      \t\t\tclassName=\"serie-poster-path\"\r\n\t\t\t     \t \t\tsrc={image + serie.poster_path}\r\n\t\t\t      \t\t\talt={serie.name}/>\r\n\t\t\t\t\t</div>\r\n \t\r\n \t\t\t\t\t<div className=\"column-2\">\r\n    \t\t\t\t\t<Card.Title><h1>{serie.name}</h1></Card.Title>\r\n    \t\t\t\t\t\t<Card.Text>\r\n      \t\t\t\t\t\t\t<h5 className=\"movie-original-title\">({serie.original_name}) - <Badge variant=\"warning\" ><BsFillStarFill/>{serie.vote_average}</Badge></h5>\r\n    \t\t\t\t\t\t</Card.Text>\r\n    \t\t\t\t\t\t<Card.Text>{serie.overview}</Card.Text>\r\n  \r\n    \t\t\t\t\t\t<Button variant=\"danger\" onClick={()=>saveFavs(serie)}><BsHeartFill/> Agregar a Mi Lista</Button>\r\n    \t\t\t\t\t\t<AlertCustom variant={alert.variant} text={alert.text} />\r\n\t\t\t\t\t</div>\r\n\t\t    \t</Card.ImgOverlay>\r\n\t\t\t</Card>\r\n\t\t</>\r\n\t)\r\n\r\n}\r\n\r\nexport default DetalleSerie;","import React , {useState, useEffect} from \"react\";\r\nimport {Carousel, Badge, Button} from \"react-bootstrap\";\r\nimport Loading from \"../Components/Loading\";\r\nimport {BsFillStarFill, BsInfoCircle} from \"react-icons/bs\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"../Styles/Carousel.css\";\r\n\r\nfunction TrendingCarousel(){\r\n\r\n  const [results, setResults] = useState([]);\r\n  const [spinner, setSpinner] = useState(true);\r\n\r\n  const image = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\n  useEffect(() => {\r\n  \tfetch('https://api.themoviedb.org/3/trending/all/day?api_key=c2c2cd525b5005c063f7b1a9d54ab699&language=es-ES')\r\n  \t\t.then((res) => res.json())\r\n  \t\t.then((data) => {\r\n  \t  \tconsole.log(data);\r\n  \t  \tsetResults(data.results);\r\n        setSpinner(false);\r\n  \t  })\r\n      .catch((error)=>{\r\n            console.log(error)\r\n        })\r\n  }, []);\r\n\r\n  return(\r\n\r\n    <div>\r\n\r\n      {spinner &&\r\n        <Loading />\r\n      }\r\n      \r\n\t\t  <Carousel indicators={false} >\r\n        {results.length > 0 && results.map((result)=>(\r\n          <Carousel.Item className=\"carousel\">\r\n            <img\r\n            className=\"d-block w-100\"\r\n            src={image + result.backdrop_path}\r\n            alt={result.title}\r\n            />\r\n            \r\n            <Carousel.Caption className=\"carousel-caption\">  \r\n              <h1>{result.title || result.name }</h1>\r\n              <h5 className=\"original-title\">({result.original_title || result.original_name}) - <Badge variant=\"warning\" ><BsFillStarFill/>{result.vote_average}</Badge></h5>\r\n              <p className=\"carousel-overview\">{result.overview}</p>\r\n      \r\n              {result.media_type == \"movie\" ? \r\n              (<Link to={\"/peliculas/\"+result.id}>\r\n                <Button variant=\"secondary\"><BsInfoCircle/> Más información</Button>\r\n              </Link>)\r\n              : (<Link to={\"/series/\"+result.id}>\r\n                <Button variant=\"secondary\"><BsInfoCircle/> Más información</Button>\r\n              </Link>)}\r\n            </Carousel.Caption>\r\n        </Carousel.Item>))}\r\n      </Carousel>\r\n    </div>\r\n\t)\r\n}\r\n\r\nexport default TrendingCarousel;","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport '../Styles/PopularMoviesPoster.css';\r\n\r\nconst image = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nfunction PopularMoviesPoster(pelicula) {\r\n\r\n\treturn (\r\n\t\t<div className=\"image-container\">\r\n\t\t\t<Link to={\"/peliculas/\"+pelicula.id}>\r\n\t\t\t<img className=\"popularmovies-image\" src={image + pelicula.poster_path}/>\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PopularMoviesPoster;","import React , {useState, useEffect} from \"react\";\r\nimport PopularMoviesPoster from \"../Components/PopularMoviesPoster\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport \"../Styles/PopularMovies.css\";\r\n\r\nfunction PopularMovies(){\r\n\r\n  var settings = {\r\n      dots: false,\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: 5,\r\n      slidesToScroll: 1,\r\n      responsive: [\r\n          {\r\n            breakpoint: 1024,\r\n            settings: {\r\n              slidesToShow: 3,\r\n              slidesToScroll: 4,\r\n              infinite: true,\r\n              dots: true\r\n            }\r\n          },\r\n          {\r\n            breakpoint: 600,\r\n            settings: {\r\n              slidesToShow: 3,\r\n              slidesToScroll: 2,\r\n              initialSlide: 2\r\n            }\r\n          },\r\n          {\r\n            breakpoint: 480,\r\n            settings: {\r\n              slidesToShow: 3,\r\n              slidesToScroll: 2\r\n            }\r\n          }\r\n        ]\r\n      };\r\n\r\n\r\n  const [results, setResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('https://api.themoviedb.org/3/movie/popular?api_key=c2c2cd525b5005c063f7b1a9d54ab699&language=es-ES')\r\n  \t\t.then((res) => res.json())\r\n  \t\t.then((data) => {\r\n  \t  \t\t\tconsole.log(data);\r\n  \t  \t\t\tsetResults(data.results);\r\n          })\r\n      .catch((error)=>{\r\n        console.log(error)\r\n      })\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"popularmovies-container\">\r\n  \t <h4>Películas más populares</h4>\r\n  \t <Container fluid >\r\n  \t\t  <Slider {...settings} > \r\n  \t\t\t {results.length > 0 && results.map((result)=><PopularMoviesPoster key={result.id} {...result} />)}\r\n  \t\t  </Slider> \r\n  \t</Container>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default PopularMovies;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport Button from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport '../Styles/PopularSeriesPoster.css';\r\n\r\nconst image = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nfunction PopularSeriesPoster(serie){\r\n\treturn (\r\n\t\t<div className=\"image-container\">\r\n\t\t\t<Link to={\"/series/\"+serie.id}>\r\n\t\t\t<img className=\"popularseries-image\" src={image + serie.poster_path}/>\r\n\t\t\t</Link>\r\n\t\t </div>\r\n\t)\r\n}\r\n\r\nexport default PopularSeriesPoster;","import React , {useState, useEffect} from \"react\";\r\nimport PopularSeriesPoster from \"../Components/PopularSeriesPoster\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport \"../Styles/PopularSeries.css\";\r\n\r\nfunction PopularSeries(){\r\n\r\n  var settings = {\r\n      dots: false,\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: 5,\r\n      slidesToScroll: 1,\r\n      responsive: [\r\n          {\r\n            breakpoint: 1024,\r\n            settings: {\r\n              slidesToShow: 3,\r\n              slidesToScroll: 4,\r\n              infinite: true,\r\n              dots: true\r\n            }\r\n          },\r\n          {\r\n            breakpoint: 600,\r\n            settings: {\r\n              slidesToShow: 3,\r\n              slidesToScroll: 2,\r\n              initialSlide: 2\r\n            }\r\n          },\r\n          {\r\n            breakpoint: 480,\r\n            settings: {\r\n              slidesToShow: 3,\r\n              slidesToScroll: 1\r\n            }\r\n        }\r\n      ]\r\n  };\r\n\r\n\tconst [results, setResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n  \tfetch('https://api.themoviedb.org/3/tv/popular?api_key=c2c2cd525b5005c063f7b1a9d54ab699&language=es-ES&page=1')\r\n  \t\t.then((res) => res.json())\r\n  \t\t.then((data) => {\r\n  \t  \t\t\tconsole.log(data);\r\n  \t  \t\t\tsetResults(data.results);\r\n  \t  })\r\n      .catch((error)=>{\r\n        console.log(error)\r\n      })\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"series-container\">\r\n      <h4>Series más populares</h4>\r\n      <Container fluid >\r\n\t\t    <Slider {...settings}> \r\n          {results.length > 0 && results.map((result)=><PopularSeriesPoster key={result.id} {...result} />)}\r\n\t\t    </Slider> \r\n      </Container>\r\n\t</div>\r\n  );\r\n}\r\n\r\nexport default PopularSeries;","import Carousel from \"../Components/Carousel\";\r\nimport PopularMovies from \"../Components/PopularMovies\";\r\nimport PopularSeries from \"../Components/PopularSeries\";\r\n\r\nfunction Home(){\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<Carousel/>\r\n\t\t\t<PopularMovies/>\r\n\t\t\t<PopularSeries/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Home;","import React, {useContext} from \"react\";\r\nimport {MyListContext} from \"../Context/MyListContext\";\r\nimport {Link} from 'react-router-dom';\r\nimport \"../Styles/MyList.css\";\r\n\r\nconst image = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nfunction MyList (){\r\n\r\n\tconst [myListFavorites, setMyListFavorites] = useContext(MyListContext);\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<h3>Mi Lista</h3>\r\n\t\t\t<div className=\"favorites-container\">\r\n\t\t\t\t{myListFavorites.map((pelicula) => (\r\n\t\t\t\t\t<div className=\"favoriteposter-container\">\r\n\t\t\t\t\t\t<img \r\n\t\t\t\t\t\t\tclassName=\"favoriteimage-container\"\r\n\t\t\t\t\t\t\tsrc={image + pelicula.poster_path}\r\n\t\t\t\t\t\t\talt={pelicula.title}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default MyList;","import {Route} from \"react-router-dom\";\r\nimport Series from \"../Pages/Series\";\r\nimport Movies from \"../Pages/Movies\";\r\nimport MovieDetails from \"../Pages/MovieDetails\";\r\nimport SerieDetails from \"../Pages/SerieDetails\";\r\nimport Home from \"../Pages/Home\";\r\nimport MyList from \"../Pages/MyList\";\r\n\r\nfunction RoutesWeb(){\r\n\treturn(\r\n\t     <div>\r\n                  <Route path=\"/\" exact component={Home} />\r\n      \t\t<Route path=\"/peliculas\" exact component={Movies} />\r\n            \t<Route path=\"/series\" exact component={Series} />\r\n            \t<Route path=\"/peliculas/:id\" exact component={MovieDetails} />\r\n            \t<Route path=\"/series/:id\" exact component={SerieDetails} />\r\n                  <Route path=\"/lista\" exact component={MyList} />\r\n      \t</div>\r\n\t)\r\n}\r\n\r\nexport default RoutesWeb;","import React, {useState} from \"react\";\r\nimport Menu from \"./Components/Menu/Menu\";\r\nimport RoutesWeb from \"./Components/RoutesWeb\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {MyListProvider} from \"./Context/MyListContext\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n\r\n\tconst [options, setOptions] = useState([\r\n\t\t{\r\n\t\t\tpath:\"/\",\r\n\t\t\tlabel: \"Inicio\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath:\"/peliculas\",\r\n\t\t\tlabel: \"Peliculas\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath:\"/series\",\r\n\t\t\tlabel: \"Series\"\r\n\t\t},\r\n\t]);\r\n\r\n\r\n\treturn (\r\n  \t\t<MyListProvider>\r\n  \t\t\t<div className=\"app-container\">  \t\r\n      \t\t\t<BrowserRouter>\r\n      \t\t\t\t<Menu options={options} />\r\n      \t\t\t\t<RoutesWeb />\r\n      \t\t\t</BrowserRouter>\r\n\t\t\t</div>\r\n    \t</MyListProvider>\r\n  \t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}